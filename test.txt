Trial 1

Executing initialize

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|   A>    |         |         |     P   |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)
  Try 1

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(1).

:- dynamic position/3.

position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.


:- dynamic safe/2.

safe(1, 1).

:- dynamic visited/2.

visited(1, 1).

:- dynamic act/2.

act([], 0).

>>> Path_back stack = []
[DEBUG] Testando GOFORWARD para: 1,2

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   A>    |         |     P   |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(2).

:- dynamic position/3.

position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.


:- dynamic safe/2.

safe(1, 1).

:- dynamic visited/2.

visited(1, 1).

:- dynamic act/2.

act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,1)]
[DEBUG] Testando GOFORWARD para: 1,3

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         |   A>    |     P   |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,yes,no,no,no]
Atoms = [breeze]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(3).

:- dynamic position/3.

position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,4

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         |   A^    |     P   |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,yes,no,no,no]
Atoms = [breeze]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(4).

:- dynamic position/3.

position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 2,3

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         |   <A    |     P   |
-----------------------------------------
agent_orientation(180)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,yes,no,no,no]
Atoms = [breeze]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(5).

:- dynamic position/3.

position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,2

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   <A    |         |     P   |
-----------------------------------------
agent_orientation(180)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(6).

:- dynamic position/3.

position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,1

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   Av    |         |     P   |
-----------------------------------------
agent_orientation(270)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(7).

:- dynamic position/3.

position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 0,2

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   Av    |         |     P   |
-----------------------------------------
agent_orientation(270)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,yes,no]
Atoms = [bump]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(8).

:- dynamic position/3.

position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 0,2

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   A>    |         |     P   |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(9).

:- dynamic position/3.

position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,3

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   A^    |         |     P   |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(10).

:- dynamic position/3.

position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 2,2

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |       G |     P   |         |
-----------------------------------------
|         |   A^    |         |         |
-----------------------------------------
|         |         |         |     P   |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(11).

:- dynamic position/3.

position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 3,2

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |   A^  G |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         |         |     P   |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,yes,yes,no,no]
Atoms = [breeze,glitter]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(12).

:- dynamic position/3.

position(3, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(3, 2, 12).
breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.

gold1(3, 2).

:- dynamic danger/2.

danger(3, 1).
danger(3, 3).
danger(4, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(2,2),(1,2),(1,1)]

Log_action
Action = grab
You now have 1 piece(s) of gold!

Executing grab

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |   A^    |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         |         |     P   |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(1)
agent_gold(1)

Log_see
Percepts = [no,yes,no,no,no]
Atoms = [breeze]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(13).

:- dynamic position/3.

position(3, 2, 13).
position(3, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 13).
orientation(north, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(3, 2, 13).
breeze(3, 2, 12).
breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(3, 1).
danger(3, 3).
danger(4, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(3, 2).
safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(3, 2).
visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(grab, 12).
act(goforward, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(2,2),(1,2),(1,1)]

Executing turnleft

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |   <A    |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         |         |     P   |
-----------------------------------------
agent_orientation(180)
agent_health(alive)
agent_arrows(1)
agent_gold(1)

Log_see
Percepts = [no,yes,no,no,no]
Atoms = [breeze]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(14).

:- dynamic position/3.

position(3, 2, 14).
position(3, 2, 13).
position(3, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(west, 14).
orientation(north, 13).
orientation(north, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(3, 2, 14).
breeze(3, 2, 13).
breeze(3, 2, 12).
breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(3, 1).
danger(3, 3).
danger(4, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(3, 2).
safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(3, 2).
visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 13).
act(grab, 12).
act(goforward, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(2,2),(1,2),(1,1)]

Executing turnleft

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |   Av    |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         |         |     P   |
-----------------------------------------
agent_orientation(270)
agent_health(alive)
agent_arrows(1)
agent_gold(1)

Log_see
Percepts = [no,yes,no,no,no]
Atoms = [breeze]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(15).

:- dynamic position/3.

position(3, 2, 15).
position(3, 2, 14).
position(3, 2, 13).
position(3, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(south, 15).
orientation(west, 14).
orientation(north, 13).
orientation(north, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(3, 2, 15).
breeze(3, 2, 14).
breeze(3, 2, 13).
breeze(3, 2, 12).
breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(3, 1).
danger(3, 3).
danger(4, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(3, 2).
safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(3, 2).
visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 14).
act(turnleft, 13).
act(grab, 12).
act(goforward, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(2,2),(1,2),(1,1)]

Executing goforward

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |         |     P   |         |
-----------------------------------------
|         |   Av    |         |         |
-----------------------------------------
|         |         |         |     P   |
-----------------------------------------
agent_orientation(270)
agent_health(alive)
agent_arrows(1)
agent_gold(1)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(16).

:- dynamic position/3.

position(2, 2, 16).
position(3, 2, 15).
position(3, 2, 14).
position(3, 2, 13).
position(3, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(south, 16).
orientation(south, 15).
orientation(west, 14).
orientation(north, 13).
orientation(north, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(3, 2, 15).
breeze(3, 2, 14).
breeze(3, 2, 13).
breeze(3, 2, 12).
breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(3, 1).
danger(3, 3).
danger(4, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(3, 2).
safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(3, 2).
visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 15).
act(turnleft, 14).
act(turnleft, 13).
act(grab, 12).
act(goforward, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]

Executing goforward

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |         |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   Av    |         |     P   |
-----------------------------------------
agent_orientation(270)
agent_health(alive)
agent_arrows(1)
agent_gold(1)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(17).

:- dynamic position/3.

position(1, 2, 17).
position(2, 2, 16).
position(3, 2, 15).
position(3, 2, 14).
position(3, 2, 13).
position(3, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(south, 17).
orientation(south, 16).
orientation(south, 15).
orientation(west, 14).
orientation(north, 13).
orientation(north, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(3, 2, 15).
breeze(3, 2, 14).
breeze(3, 2, 13).
breeze(3, 2, 12).
breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(3, 1).
danger(3, 3).
danger(4, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(3, 2).
safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(3, 2).
visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 16).
act(goforward, 15).
act(turnleft, 14).
act(turnleft, 13).
act(grab, 12).
act(goforward, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,1)]

Executing turnright

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |         |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   <A    |         |     P   |
-----------------------------------------
agent_orientation(180)
agent_health(alive)
agent_arrows(1)
agent_gold(1)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(18).

:- dynamic position/3.

position(1, 2, 18).
position(1, 2, 17).
position(2, 2, 16).
position(3, 2, 15).
position(3, 2, 14).
position(3, 2, 13).
position(3, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(west, 18).
orientation(south, 17).
orientation(south, 16).
orientation(south, 15).
orientation(west, 14).
orientation(north, 13).
orientation(north, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(3, 2, 15).
breeze(3, 2, 14).
breeze(3, 2, 13).
breeze(3, 2, 12).
breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(3, 1).
danger(3, 3).
danger(4, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(3, 2).
safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(3, 2).
visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnright, 17).
act(goforward, 16).
act(goforward, 15).
act(turnleft, 14).
act(turnleft, 13).
act(grab, 12).
act(goforward, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,1)]

Executing goforward

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |         |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|   <A    |         |         |     P   |
-----------------------------------------
agent_orientation(180)
agent_health(alive)
agent_arrows(1)
agent_gold(1)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(19).

:- dynamic position/3.

position(1, 1, 19).
position(1, 2, 18).
position(1, 2, 17).
position(2, 2, 16).
position(3, 2, 15).
position(3, 2, 14).
position(3, 2, 13).
position(3, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(west, 19).
orientation(west, 18).
orientation(south, 17).
orientation(south, 16).
orientation(south, 15).
orientation(west, 14).
orientation(north, 13).
orientation(north, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.

breeze(3, 2, 15).
breeze(3, 2, 14).
breeze(3, 2, 13).
breeze(3, 2, 12).
breeze(1, 3, 5).
breeze(1, 3, 4).
breeze(1, 3, 3).

:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(3, 1).
danger(3, 3).
danger(4, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(3, 2).
safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(3, 2).
visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 18).
act(turnright, 17).
act(goforward, 16).
act(goforward, 15).
act(turnleft, 14).
act(turnleft, 13).
act(grab, 12).
act(goforward, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = []

Executing climb

-----------------------------------------
|         |         |         | W   P   |
-----------------------------------------
|         |         |     P   |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|   <A    |         |         |     P   |
-----------------------------------------
agent_orientation(180)
agent_health(alive)
agent_arrows(1)
agent_gold(1)
I am outta here.
  Actions = [goforward,goforward,turnleft,turnleft,goforward,turnleft,goforward,turnleft,turnleft,goforward,goforward,grab,turnleft,turnleft,goforward,goforward,turnright,goforward,climb]
Trial 1

Executing initialize

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|   A>    |         |         |         |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)
  Try 1

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(1).

:- dynamic position/3.

position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.


:- dynamic safe/2.

safe(1, 1).

:- dynamic visited/2.

visited(1, 1).

:- dynamic act/2.

act([], 0).

>>> Path_back stack = []
[DEBUG] Testando GOFORWARD para: 1,2

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |   A>    |         |         |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(2).

:- dynamic position/3.

position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.


:- dynamic safe/2.

safe(1, 1).

:- dynamic visited/2.

visited(1, 1).

:- dynamic act/2.

act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,1)]
[DEBUG] Testando GOFORWARD para: 1,3

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |         |   A>    |         |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,no]
Atoms = [stench]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(3).

:- dynamic position/3.

position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,4

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |         |   A^    |         |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,no]
Atoms = [stench]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(4).

:- dynamic position/3.

position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 2,3

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |         |   <A    |         |
-----------------------------------------
agent_orientation(180)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,no]
Atoms = [stench]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(5).

:- dynamic position/3.

position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,2

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |   <A    |         |         |
-----------------------------------------
agent_orientation(180)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(6).

:- dynamic position/3.

position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,1

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |   Av    |         |         |
-----------------------------------------
agent_orientation(270)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(7).

:- dynamic position/3.

position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.


:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 0,2

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |   Av    |         |         |
-----------------------------------------
agent_orientation(270)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,yes,no]
Atoms = [bump]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(8).

:- dynamic position/3.

position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 0,2

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |   A>    |         |         |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(9).

:- dynamic position/3.

position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,3

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |   A^    |         |         |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(10).

:- dynamic position/3.

position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 2,2

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   A^    | W       |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,no]
Atoms = [stench]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(11).

:- dynamic position/3.

position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(2, 2, 11).
stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(2, 1).
danger(3, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 3,2

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   <A    | W       |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
agent_orientation(180)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,no]
Atoms = [stench]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(12).

:- dynamic position/3.

position(2, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(west, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(2, 2, 12).
stench(2, 2, 11).
stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(2, 1).
danger(3, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 2,1

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |   Av    | W       |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
agent_orientation(270)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,no]
Atoms = [stench]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(13).

:- dynamic position/3.

position(2, 2, 13).
position(2, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(south, 13).
orientation(west, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(2, 2, 13).
stench(2, 2, 12).
stench(2, 2, 11).
stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(2, 1).
danger(3, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 12).
act(turnleft, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,2

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |   Av    |         |         |
-----------------------------------------
agent_orientation(270)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(14).

:- dynamic position/3.

position(1, 2, 14).
position(2, 2, 13).
position(2, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(south, 14).
orientation(south, 13).
orientation(west, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(2, 2, 13).
stench(2, 2, 12).
stench(2, 2, 11).
stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(2, 1).
danger(3, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 13).
act(turnleft, 12).
act(turnleft, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(2,2),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 0,2

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |   A>    |         |         |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [no,no,no,no,no]
Atoms = []

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(15).

:- dynamic position/3.

position(1, 2, 15).
position(1, 2, 14).
position(2, 2, 13).
position(2, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(east, 15).
orientation(south, 14).
orientation(south, 13).
orientation(west, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(2, 2, 13).
stench(2, 2, 12).
stench(2, 2, 11).
stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(2, 1).
danger(3, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 14).
act(goforward, 13).
act(turnleft, 12).
act(turnleft, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(2,2),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,3

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |         |   A>    |         |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,no]
Atoms = [stench]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(16).

:- dynamic position/3.

position(1, 3, 16).
position(1, 2, 15).
position(1, 2, 14).
position(2, 2, 13).
position(2, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(east, 16).
orientation(east, 15).
orientation(south, 14).
orientation(south, 13).
orientation(west, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(1, 3, 16).
stench(2, 2, 13).
stench(2, 2, 12).
stench(2, 2, 11).
stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(2, 1).
danger(3, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 15).
act(turnleft, 14).
act(goforward, 13).
act(turnleft, 12).
act(turnleft, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 1,4

Log_action
Action = turnleft

Executing turnleft

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |         |   A^    |         |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(1)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,no]
Atoms = [stench]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(17).

:- dynamic position/3.

position(1, 3, 17).
position(1, 3, 16).
position(1, 2, 15).
position(1, 2, 14).
position(2, 2, 13).
position(2, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 17).
orientation(east, 16).
orientation(east, 15).
orientation(south, 14).
orientation(south, 13).
orientation(west, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.

stench(1, 3, 17).
stench(1, 3, 16).
stench(2, 2, 13).
stench(2, 2, 12).
stench(2, 2, 11).
stench(1, 3, 5).
stench(1, 3, 4).
stench(1, 3, 3).

:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.


:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.

danger(2, 1).
danger(3, 2).
danger(1, 4).
danger(2, 3).

:- dynamic safe/2.

safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(turnleft, 16).
act(goforward, 15).
act(turnleft, 14).
act(goforward, 13).
act(turnleft, 12).
act(turnleft, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]

Log_action
Action = shoot
You now have 0 arrow(s).

Executing shoot

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |         |   A^    |         |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(0)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,yes]
Atoms = [stench,scream]
[DEBUG] Limpando pós-grito na interação 18
[DEBUG] Removendo danger de 1,4
[DEBUG] Removendo danger de 2,1
[DEBUG] Removendo danger de 2,3
[DEBUG] Removendo danger de 3,2

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(18).

:- dynamic position/3.

position(1, 3, 18).
position(1, 3, 17).
position(1, 3, 16).
position(1, 2, 15).
position(1, 2, 14).
position(2, 2, 13).
position(2, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 18).
orientation(north, 17).
orientation(east, 16).
orientation(east, 15).
orientation(south, 14).
orientation(south, 13).
orientation(west, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.

scream(1, 3, 18).
scream(1, 3, 18).

:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.


:- dynamic safe/2.

safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(shoot, 17).
act(turnleft, 16).
act(goforward, 15).
act(turnleft, 14).
act(goforward, 13).
act(turnleft, 12).
act(turnleft, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 2,3

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W A^    |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(0)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,no]
Atoms = [stench]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(19).

:- dynamic position/3.

position(2, 3, 19).
position(1, 3, 18).
position(1, 3, 17).
position(1, 3, 16).
position(1, 2, 15).
position(1, 2, 14).
position(2, 2, 13).
position(2, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 19).
orientation(north, 18).
orientation(north, 17).
orientation(east, 16).
orientation(east, 15).
orientation(south, 14).
orientation(south, 13).
orientation(west, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.

scream(1, 3, 18).
scream(1, 3, 18).

:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.


:- dynamic safe/2.

safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 18).
act(shoot, 17).
act(turnleft, 16).
act(goforward, 15).
act(turnleft, 14).
act(goforward, 13).
act(turnleft, 12).
act(turnleft, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 3,3

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |   A^    |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(0)
agent_gold(0)

Log_see
Percepts = [yes,no,no,no,no]
Atoms = [stench]

Log_next
Knowledge Base
:- dynamic interaction/1.

interaction(20).

:- dynamic position/3.

position(3, 3, 20).
position(2, 3, 19).
position(1, 3, 18).
position(1, 3, 17).
position(1, 3, 16).
position(1, 2, 15).
position(1, 2, 14).
position(2, 2, 13).
position(2, 2, 12).
position(2, 2, 11).
position(1, 2, 10).
position(1, 2, 9).
position(1, 2, 8).
position(1, 2, 7).
position(1, 2, 6).
position(1, 3, 5).
position(1, 3, 4).
position(1, 3, 3).
position(1, 2, 2).
position(1, 1, 1).
position(1, 1, 0).

:- dynamic orientation/2.

orientation(north, 20).
orientation(north, 19).
orientation(north, 18).
orientation(north, 17).
orientation(east, 16).
orientation(east, 15).
orientation(south, 14).
orientation(south, 13).
orientation(west, 12).
orientation(north, 11).
orientation(north, 10).
orientation(east, 9).
orientation(south, 8).
orientation(south, 7).
orientation(west, 6).
orientation(west, 5).
orientation(north, 4).
orientation(east, 3).
orientation(east, 2).
orientation(east, 1).
orientation(east, 0).

:- dynamic stench/3.


:- dynamic breeze/3.


:- dynamic glitter/3.


:- dynamic scream/3.

scream(1, 3, 18).
scream(1, 3, 18).

:- dynamic wall/2.

wall(0, 2).

:- dynamic gold1/2.


:- dynamic danger/2.


:- dynamic safe/2.

safe(2, 3).
safe(2, 2).
safe(1, 3).
safe(1, 2).
safe(1, 1).

:- dynamic visited/2.

visited(2, 3).
visited(2, 2).
visited(1, 3).
visited(1, 2).
visited(1, 1).

:- dynamic act/2.

act(goforward, 19).
act(goforward, 18).
act(shoot, 17).
act(turnleft, 16).
act(goforward, 15).
act(turnleft, 14).
act(goforward, 13).
act(turnleft, 12).
act(turnleft, 11).
act(goforward, 10).
act(turnleft, 9).
act(turnleft, 8).
act(goforward, 7).
act(turnleft, 6).
act(goforward, 5).
act(turnleft, 4).
act(turnleft, 3).
act(goforward, 2).
act(goforward, 1).
act([], 0).

>>> Path_back stack = [(2,3),(1,3),(1,2),(1,1)]
[DEBUG] Testando GOFORWARD para: 4,3

Log_action
Action = goforward

Executing goforward

-----------------------------------------
|     P   |         |   A^    |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
agent_orientation(90)
agent_health(alive)
agent_arrows(0)
agent_gold(0)

Executing restart

-----------------------------------------
|     P   |         |         |       G |
-----------------------------------------
|         |         |         |         |
-----------------------------------------
|         |         | W       |         |
-----------------------------------------
|   A>    |         |         |         |
-----------------------------------------
agent_orientation(0)
agent_health(alive)
agent_arrows(1)
agent_gold(0)
  Actions = []
****************
Tested: 2
Score: 480.5[707.8138879677341]
Time: 31.5[0.7071067811865476]
****************
